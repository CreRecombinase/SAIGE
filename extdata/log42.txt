R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS/LAPACK: /usr/lib/libopenblasp-r0.2.18.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] optparse_1.6.4 SAIGE_0.36.3.4

loaded via a namespace (and not attached):
[1] compiler_3.6.1     Matrix_1.2-17      Rcpp_1.0.3         getopt_1.20.3     
[5] grid_3.6.1         RcppParallel_4.4.4 lattice_0.20-38   
$plinkFile
[1] "./input/nfam_100_nindep_0_step1_includeMoreRareVariants_poly"

$phenoFile
[1] "./input/pheno_1000samples_survival.50cases.txt"

$phenoCol
[1] "casecontrol"

$traitType
[1] "survival"

$eventTimeCol
[1] "AgeOfEventFinal"

$pcgforUhatforSurvAnalysis
[1] TRUE

$invNormalize
[1] FALSE

$covarColList
[1] "X"

$sampleIDColinphenoFile
[1] "IND_ID"

$tol
[1] 0.02

$maxiter
[1] 20

$tolPCG
[1] 1e-05

$maxiterPCG
[1] 500

$nThreads
[1] 4

$SPAcutoff
[1] 2

$numRandomMarkerforVarianceRatio
[1] 30

$skipModelFitting
[1] TRUE

$memoryChunk
[1] 2

$tauInit
[1] "1,0"

$LOCO
[1] FALSE

$traceCVcutoff
[1] 0.0025

$ratioCVcutoff
[1] 0.001

$outputPrefix
[1] "./output_test/example_survival.50cases"

$IsSparseKin
[1] FALSE

$sparseGRMFile
[1] ""

$sparseGRMSampleIDFile
[1] ""

$numRandomMarkerforSparseKin
[1] 2000

$isCateVarianceRatio
[1] FALSE

$relatednessCutoff
[1] 0.125

$cateVarRatioMinMACVecExclude
[1] "0.5,1.5,2.5,3.5,4.5,5.5,10.5,20.5"

$cateVarRatioMaxMACVecInclude
[1] "1.5,2.5,3.5,4.5,5.5,10.5,20.5"

$isCovariateTransform
[1] TRUE

$isDiagofKinSetAsOne
[1] FALSE

$useSparseSigmaConditionerforPCG
[1] FALSE

$useSparseSigmaforInitTau
[1] FALSE

$minMAFforGRM
[1] 0.01

$minCovariateCount
[1] -1

$useSparseGRMtoFitNULL
[1] FALSE

$help
[1] FALSE

tauInit  is  1 0 
cateVarRatioMinMACVecExclude  is  0.5 1.5 2.5 3.5 4.5 5.5 10.5 20.5 
cateVarRatioMaxMACVecInclude  is  1.5 2.5 3.5 4.5 5.5 10.5 20.5 
[1] 1 0
Markers in the Plink file with MAF >=  0.01  will be used to construct GRM
4  threads are set to be used  
WARNING: The variance ratio file  ./output_test/example_survival.50cases.varianceRatio.txt  already exists. The new variance ratios will be output to  ./output_test/example_survival.50cases.varianceRatio.txt . In order to avoid over-writting, please remove the  ./output_test/example_survival.50cases.varianceRatio.txt  or use the argument outputPrefix_varRatio to specify a different prefix to output the variance ratio(s)
1000  samples have genotypes
formula is  casecontrol~X 
1000  samples have non-missing phenotypes
1000  samples will be used for analysis
qr transformation has been performed on covariates
colnames(data.new) is  Y minus1 X 
out.transform$Param.transform$qrr:  2 2 
casecontrol  is a binary trait
Survival analysis will be performed
glm:

Call:  glm(formula = formula.new, family = binomial, data = data.new)

Coefficients:
minus1       X  
3.1641  0.7046  

Degrees of Freedom: 1000 Total (i.e. Null);  998 Residual
Null Deviance:	    1386 
Residual Deviance: 373.9 	AIC: 377.9
Skip fitting the NULL GLMM
nbyte: 250
nbyte: 250
reserve: 32474736

M: 128868, N: 1000
size of genoVecofPointers: 1
setgeno mark1
setgeno mark2
111305 markers with MAF >= 0.01 are used for GRM.
setgeno mark5
setgeno mark6
time: 1976.22
Start estimating variance ratios

Family: binomial 
Link function: logit 

          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 1646085 88.0    2514678 134.3  2514678 134.3
Vcells 3457819 26.4    8388608  64.0  5836814  44.6
[1] "debug2"
[1] 1000
[1] 45
[1] TRUE
Only one variance ratio will be estimated using randomly selected markers with MAC >= 20
iter from getPCG1ofSigmaAndVector 4
iter from getPCG1ofSigmaAndVector 5
28835 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
69453 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
50686 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
80894 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
13974 th marker
G0 0 0 0 0 1 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
29743 th marker
G0 1 1 1 0 2 1 1 1 0 0 
iter from getPCG1ofSigmaAndVector 4
38365 th marker
G0 2 1 1 1 0 1 1 1 0 1 
iter from getPCG1ofSigmaAndVector 4
16777 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
9830 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
29890 th marker
G0 2 1 2 1 1 2 1 1 2 1 
iter from getPCG1ofSigmaAndVector 4
[1] "OK"
[1] "OK1"
104933 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
26381 th marker
G0 2 1 2 2 1 1 1 2 1 2 
iter from getPCG1ofSigmaAndVector 4
121317 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 3
14757 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
51320 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
84228 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
107270 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 3
124835 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
42621 th marker
G0 0 1 0 1 0 1 0 0 2 0 
iter from getPCG1ofSigmaAndVector 3
112198 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
[1] "OK"
[1] "OK1"
53330 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 3
94339 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
7891 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
115296 th marker
G0 0 0 0 0 2 1 1 1 0 1 
iter from getPCG1ofSigmaAndVector 4
106902 th marker
G0 0 0 0 0 0 1 0 0 1 1 
iter from getPCG1ofSigmaAndVector 4
22978 th marker
G0 1 0 0 1 1 2 0 1 2 1 
iter from getPCG1ofSigmaAndVector 4
100951 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
95339 th marker
G0 2 2 2 2 0 0 1 1 1 1 
iter from getPCG1ofSigmaAndVector 4
25906 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
68305 th marker
G0 0 0 0 0 0 0 0 0 0 0 
iter from getPCG1ofSigmaAndVector 4
[1] "OK"
[1] "OK1"
[1] "OK2"
CV for variance ratio estimate using  30  markers is  0.0003402102  <  0.001 
varRatio 0.9410192 
[1] 0.9410192
          [,1]
[1,] 0.9410192
          [,1]
[1,] 0.9410192
[1] "./output_test/example_survival.50cases.varianceRatio.txt"
         V1
1 0.9410192
closed the plinkFile!
