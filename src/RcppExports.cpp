// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// eigenMapMatMult
SEXP eigenMapMatMult(const Eigen::Map<Eigen::MatrixXd>& A, Eigen::Map<Eigen::MatrixXd>& B);
RcppExport SEXP _SAIGE_eigenMapMatMult(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(eigenMapMatMult(A, B));
    return rcpp_result_gen;
END_RCPP
}
// closeGenoFile_plink
void closeGenoFile_plink();
RcppExport SEXP _SAIGE_closeGenoFile_plink() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closeGenoFile_plink();
    return R_NilValue;
END_RCPP
}
// gettotalMarker
int gettotalMarker();
RcppExport SEXP _SAIGE_gettotalMarker() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(gettotalMarker());
    return rcpp_result_gen;
END_RCPP
}
// getAlleleFreqVec
arma::fvec getAlleleFreqVec();
RcppExport SEXP _SAIGE_getAlleleFreqVec() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getAlleleFreqVec());
    return rcpp_result_gen;
END_RCPP
}
// getMACVec
arma::ivec getMACVec();
RcppExport SEXP _SAIGE_getMACVec() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getMACVec());
    return rcpp_result_gen;
END_RCPP
}
// getSubMarkerIndex
arma::ivec getSubMarkerIndex();
RcppExport SEXP _SAIGE_getSubMarkerIndex() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getSubMarkerIndex());
    return rcpp_result_gen;
END_RCPP
}
// getSubMarkerNum
int getSubMarkerNum();
RcppExport SEXP _SAIGE_getSubMarkerNum() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getSubMarkerNum());
    return rcpp_result_gen;
END_RCPP
}
// Get_MultiMarkersBySample_StdGeno_Mat
void Get_MultiMarkersBySample_StdGeno_Mat();
RcppExport SEXP _SAIGE_Get_MultiMarkersBySample_StdGeno_Mat() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Get_MultiMarkersBySample_StdGeno_Mat();
    return R_NilValue;
END_RCPP
}
// Get_MultiMarkersBySample_StdGeno
void Get_MultiMarkersBySample_StdGeno(arma::fvec& markerIndexVec, std::vector<float>& stdGenoMultiMarkers);
RcppExport SEXP _SAIGE_Get_MultiMarkersBySample_StdGeno(SEXP markerIndexVecSEXP, SEXP stdGenoMultiMarkersSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type markerIndexVec(markerIndexVecSEXP);
    Rcpp::traits::input_parameter< std::vector<float>& >::type stdGenoMultiMarkers(stdGenoMultiMarkersSEXP);
    Get_MultiMarkersBySample_StdGeno(markerIndexVec, stdGenoMultiMarkers);
    return R_NilValue;
END_RCPP
}
// parallelCrossProd
arma::fvec parallelCrossProd(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_parallelCrossProd(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelCrossProd(bVec));
    return rcpp_result_gen;
END_RCPP
}
// innerProductFun
float innerProductFun(std::vector<float>& x, std::vector<float>& y);
RcppExport SEXP _SAIGE_innerProductFun(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<float>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<float>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(innerProductFun(x, y));
    return rcpp_result_gen;
END_RCPP
}
// parallelCrossProd_LOCO
arma::fvec parallelCrossProd_LOCO(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_parallelCrossProd_LOCO(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelCrossProd_LOCO(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodMatAndKin
arma::fvec getCrossprodMatAndKin(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_getCrossprodMatAndKin(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodMatAndKin(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodMatAndKin_LOCO
arma::fvec getCrossprodMatAndKin_LOCO(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_getCrossprodMatAndKin_LOCO(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodMatAndKin_LOCO(bVec));
    return rcpp_result_gen;
END_RCPP
}
// printComb
void printComb(int N);
RcppExport SEXP _SAIGE_printComb(SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    printComb(N);
    return R_NilValue;
END_RCPP
}
// findIndiceRelatedSample
void findIndiceRelatedSample();
RcppExport SEXP _SAIGE_findIndiceRelatedSample() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    findIndiceRelatedSample();
    return R_NilValue;
END_RCPP
}
// parallelcalsparseGRM
void parallelcalsparseGRM(arma::fvec& GRMvec);
RcppExport SEXP _SAIGE_parallelcalsparseGRM(SEXP GRMvecSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type GRMvec(GRMvecSEXP);
    parallelcalsparseGRM(GRMvec);
    return R_NilValue;
END_RCPP
}
// parallelsumTwoVec
void parallelsumTwoVec(arma::fvec& x);
RcppExport SEXP _SAIGE_parallelsumTwoVec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type x(xSEXP);
    parallelsumTwoVec(x);
    return R_NilValue;
END_RCPP
}
// setgeno
void setgeno(std::string genofile, std::vector<int>& subSampleInGeno, float memoryChunk);
RcppExport SEXP _SAIGE_setgeno(SEXP genofileSEXP, SEXP subSampleInGenoSEXP, SEXP memoryChunkSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type genofile(genofileSEXP);
    Rcpp::traits::input_parameter< std::vector<int>& >::type subSampleInGeno(subSampleInGenoSEXP);
    Rcpp::traits::input_parameter< float >::type memoryChunk(memoryChunkSEXP);
    setgeno(genofile, subSampleInGeno, memoryChunk);
    return R_NilValue;
END_RCPP
}
// Get_OneSNP_Geno
arma::fvec Get_OneSNP_Geno(int SNPIdx);
RcppExport SEXP _SAIGE_Get_OneSNP_Geno(SEXP SNPIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SNPIdx(SNPIdxSEXP);
    rcpp_result_gen = Rcpp::wrap(Get_OneSNP_Geno(SNPIdx));
    return rcpp_result_gen;
END_RCPP
}
// Get_OneSNP_Geno_forVarianceRatio
arma::fvec Get_OneSNP_Geno_forVarianceRatio(int SNPIdx);
RcppExport SEXP _SAIGE_Get_OneSNP_Geno_forVarianceRatio(SEXP SNPIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SNPIdx(SNPIdxSEXP);
    rcpp_result_gen = Rcpp::wrap(Get_OneSNP_Geno_forVarianceRatio(SNPIdx));
    return rcpp_result_gen;
END_RCPP
}
// Get_OneSNP_StdGeno
arma::fvec Get_OneSNP_StdGeno(int SNPIdx);
RcppExport SEXP _SAIGE_Get_OneSNP_StdGeno(SEXP SNPIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SNPIdx(SNPIdxSEXP);
    rcpp_result_gen = Rcpp::wrap(Get_OneSNP_StdGeno(SNPIdx));
    return rcpp_result_gen;
END_RCPP
}
// getDiagOfSigma
arma::fvec getDiagOfSigma(arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_getDiagOfSigma(SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getDiagOfSigma(wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// getDiagOfSigma_LOCO
arma::fvec getDiagOfSigma_LOCO(arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_getDiagOfSigma_LOCO(SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getDiagOfSigma_LOCO(wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprod
arma::fcolvec getCrossprod(arma::fcolvec& bVec, arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_getCrossprod(SEXP bVecSEXP, SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprod(bVec, wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprod_LOCO
arma::fcolvec getCrossprod_LOCO(arma::fcolvec& bVec, arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_getCrossprod_LOCO(SEXP bVecSEXP, SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprod_LOCO(bVec, wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// getPCG1ofSigmaAndVector
arma::fvec getPCG1ofSigmaAndVector(arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& bVec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getPCG1ofSigmaAndVector(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP bVecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getPCG1ofSigmaAndVector(wVec, tauVec, bVec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getPCG1ofSigmaAndVector_LOCO
arma::fvec getPCG1ofSigmaAndVector_LOCO(arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& bVec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getPCG1ofSigmaAndVector_LOCO(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP bVecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type bVec(bVecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getPCG1ofSigmaAndVector_LOCO(wVec, tauVec, bVec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// set_seed
void set_seed(unsigned int seed);
RcppExport SEXP _SAIGE_set_seed(SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    set_seed(seed);
    return R_NilValue;
END_RCPP
}
// nb
Rcpp::NumericVector nb(int n);
RcppExport SEXP _SAIGE_nb(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(nb(n));
    return rcpp_result_gen;
END_RCPP
}
// setStartEndIndex
void setStartEndIndex(int startIndex, int endIndex);
RcppExport SEXP _SAIGE_setStartEndIndex(SEXP startIndexSEXP, SEXP endIndexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type startIndex(startIndexSEXP);
    Rcpp::traits::input_parameter< int >::type endIndex(endIndexSEXP);
    setStartEndIndex(startIndex, endIndex);
    return R_NilValue;
END_RCPP
}
// calCV
float calCV(arma::fvec& xVec);
RcppExport SEXP _SAIGE_calCV(SEXP xVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type xVec(xVecSEXP);
    rcpp_result_gen = Rcpp::wrap(calCV(xVec));
    return rcpp_result_gen;
END_RCPP
}
// GetTrace
float GetTrace(arma::fmat Sigma_iX, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, arma::fmat& cov1, int nrun, int maxiterPCG, float tolPCG, float traceCVcutoff);
RcppExport SEXP _SAIGE_GetTrace(SEXP Sigma_iXSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP cov1SEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fmat >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type cov1(cov1SEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTrace(Sigma_iX, Xmat, wVec, tauVec, cov1, nrun, maxiterPCG, tolPCG, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// getCoefficients
Rcpp::List getCoefficients(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getCoefficients(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getCoefficients(Yvec, Xmat, wVec, tauVec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getCoefficients_LOCO
Rcpp::List getCoefficients_LOCO(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getCoefficients_LOCO(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getCoefficients_LOCO(Yvec, Xmat, wVec, tauVec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getCoefficients_q_LOCO
Rcpp::List getCoefficients_q_LOCO(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getCoefficients_q_LOCO(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getCoefficients_q_LOCO(Yvec, Xmat, wVec, tauVec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getAIScore
Rcpp::List getAIScore(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& Sigma_iY, arma::fmat& Sigma_iX, arma::fmat& cov, int nrun, int maxiterPCG, float tolPCG, float traceCVcutoff);
RcppExport SEXP _SAIGE_getAIScore(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP Sigma_iYSEXP, SEXP Sigma_iXSEXP, SEXP covSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Sigma_iY(Sigma_iYSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(getAIScore(Yvec, Xmat, wVec, tauVec, Sigma_iY, Sigma_iX, cov, nrun, maxiterPCG, tolPCG, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// fitglmmaiRPCG
Rcpp::List fitglmmaiRPCG(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& Sigma_iY, arma::fmat& Sigma_iX, arma::fmat& cov, int nrun, int maxiterPCG, float tolPCG, float tol, float traceCVcutoff);
RcppExport SEXP _SAIGE_fitglmmaiRPCG(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP Sigma_iYSEXP, SEXP Sigma_iXSEXP, SEXP covSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP tolSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Sigma_iY(Sigma_iYSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(fitglmmaiRPCG(Yvec, Xmat, wVec, tauVec, Sigma_iY, Sigma_iX, cov, nrun, maxiterPCG, tolPCG, tol, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// getSigma_X
arma::fmat getSigma_X(arma::fvec& wVec, arma::fvec& tauVec, arma::fmat& Xmat, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getSigma_X(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP XmatSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getSigma_X(wVec, tauVec, Xmat, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getSigma_X_LOCO
arma::fmat getSigma_X_LOCO(arma::fvec& wVec, arma::fvec& tauVec, arma::fmat& Xmat, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getSigma_X_LOCO(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP XmatSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getSigma_X_LOCO(wVec, tauVec, Xmat, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getSigma_G
arma::fvec getSigma_G(arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& Gvec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getSigma_G(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP GvecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Gvec(GvecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getSigma_G(wVec, tauVec, Gvec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// getSigma_G_LOCO
arma::fvec getSigma_G_LOCO(arma::fvec& wVec, arma::fvec& tauVec, arma::fvec& Gvec, int maxiterPCG, float tolPCG);
RcppExport SEXP _SAIGE_getSigma_G_LOCO(SEXP wVecSEXP, SEXP tauVecSEXP, SEXP GvecSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type Gvec(GvecSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    rcpp_result_gen = Rcpp::wrap(getSigma_G_LOCO(wVec, tauVec, Gvec, maxiterPCG, tolPCG));
    return rcpp_result_gen;
END_RCPP
}
// GetTrace_q
arma::fvec GetTrace_q(arma::fmat Sigma_iX, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, arma::fmat& cov1, int nrun, int maxiterPCG, float tolPCG, float traceCVcutoff);
RcppExport SEXP _SAIGE_GetTrace_q(SEXP Sigma_iXSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP cov1SEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fmat >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type cov1(cov1SEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTrace_q(Sigma_iX, Xmat, wVec, tauVec, cov1, nrun, maxiterPCG, tolPCG, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// getAIScore_q
Rcpp::List getAIScore_q(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int nrun, int maxiterPCG, float tolPCG, float traceCVcutoff);
RcppExport SEXP _SAIGE_getAIScore_q(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(getAIScore_q(Yvec, Xmat, wVec, tauVec, nrun, maxiterPCG, tolPCG, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// getAIScore_q_LOCO
Rcpp::List getAIScore_q_LOCO(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int nrun, int maxiterPCG, float tolPCG, float traceCVcutoff);
RcppExport SEXP _SAIGE_getAIScore_q_LOCO(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(getAIScore_q_LOCO(Yvec, Xmat, wVec, tauVec, nrun, maxiterPCG, tolPCG, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// fitglmmaiRPCG_q_LOCO
Rcpp::List fitglmmaiRPCG_q_LOCO(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int nrun, int maxiterPCG, float tolPCG, float tol, float traceCVcutoff);
RcppExport SEXP _SAIGE_fitglmmaiRPCG_q_LOCO(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP tolSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(fitglmmaiRPCG_q_LOCO(Yvec, Xmat, wVec, tauVec, nrun, maxiterPCG, tolPCG, tol, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// fitglmmaiRPCG_q
Rcpp::List fitglmmaiRPCG_q(arma::fvec& Yvec, arma::fmat& Xmat, arma::fvec& wVec, arma::fvec& tauVec, int nrun, int maxiterPCG, float tolPCG, float tol, float traceCVcutoff);
RcppExport SEXP _SAIGE_fitglmmaiRPCG_q(SEXP YvecSEXP, SEXP XmatSEXP, SEXP wVecSEXP, SEXP tauVecSEXP, SEXP nrunSEXP, SEXP maxiterPCGSEXP, SEXP tolPCGSEXP, SEXP tolSEXP, SEXP traceCVcutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type Yvec(YvecSEXP);
    Rcpp::traits::input_parameter< arma::fmat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    Rcpp::traits::input_parameter< int >::type nrun(nrunSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterPCG(maxiterPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tolPCG(tolPCGSEXP);
    Rcpp::traits::input_parameter< float >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< float >::type traceCVcutoff(traceCVcutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(fitglmmaiRPCG_q(Yvec, Xmat, wVec, tauVec, nrun, maxiterPCG, tolPCG, tol, traceCVcutoff));
    return rcpp_result_gen;
END_RCPP
}
// parallelCrossProd_usingSubMarker
arma::fvec parallelCrossProd_usingSubMarker(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_parallelCrossProd_usingSubMarker(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelCrossProd_usingSubMarker(bVec));
    return rcpp_result_gen;
END_RCPP
}
// getCrossprodMatAndKin_usingSubMarker
arma::fvec getCrossprodMatAndKin_usingSubMarker(arma::fcolvec& bVec);
RcppExport SEXP _SAIGE_getCrossprodMatAndKin_usingSubMarker(SEXP bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fcolvec& >::type bVec(bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(getCrossprodMatAndKin_usingSubMarker(bVec));
    return rcpp_result_gen;
END_RCPP
}
// parallelInnerProduct
float parallelInnerProduct(std::vector<float>& x, std::vector<float>& y);
RcppExport SEXP _SAIGE_parallelInnerProduct(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<float>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<float>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(parallelInnerProduct(x, y));
    return rcpp_result_gen;
END_RCPP
}
// calGRMValueforSamplePair
float calGRMValueforSamplePair(arma::ivec& sampleidsVec);
RcppExport SEXP _SAIGE_calGRMValueforSamplePair(SEXP sampleidsVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::ivec& >::type sampleidsVec(sampleidsVecSEXP);
    rcpp_result_gen = Rcpp::wrap(calGRMValueforSamplePair(sampleidsVec));
    return rcpp_result_gen;
END_RCPP
}
// createSparseKin
Rcpp::List createSparseKin(arma::fvec& markerIndexVec, float relatednessCutoff, arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_createSparseKin(SEXP markerIndexVecSEXP, SEXP relatednessCutoffSEXP, SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec& >::type markerIndexVec(markerIndexVecSEXP);
    Rcpp::traits::input_parameter< float >::type relatednessCutoff(relatednessCutoffSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(createSparseKin(markerIndexVec, relatednessCutoff, wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// getColfromStdGenoMultiMarkersMat
arma::fmat getColfromStdGenoMultiMarkersMat(arma::uvec& a);
RcppExport SEXP _SAIGE_getColfromStdGenoMultiMarkersMat(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec& >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(getColfromStdGenoMultiMarkersMat(a));
    return rcpp_result_gen;
END_RCPP
}
// getNColStdGenoMultiMarkersMat
int getNColStdGenoMultiMarkersMat();
RcppExport SEXP _SAIGE_getNColStdGenoMultiMarkersMat() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getNColStdGenoMultiMarkersMat());
    return rcpp_result_gen;
END_RCPP
}
// getNRowStdGenoMultiMarkersMat
int getNRowStdGenoMultiMarkersMat();
RcppExport SEXP _SAIGE_getNRowStdGenoMultiMarkersMat() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getNRowStdGenoMultiMarkersMat());
    return rcpp_result_gen;
END_RCPP
}
// setSubMarkerIndex
void setSubMarkerIndex(arma::ivec& subMarkerIndexRandom);
RcppExport SEXP _SAIGE_setSubMarkerIndex(SEXP subMarkerIndexRandomSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::ivec& >::type subMarkerIndexRandom(subMarkerIndexRandomSEXP);
    setSubMarkerIndex(subMarkerIndexRandom);
    return R_NilValue;
END_RCPP
}
// setRelatednessCutoff
void setRelatednessCutoff(float a);
RcppExport SEXP _SAIGE_setRelatednessCutoff(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    setRelatednessCutoff(a);
    return R_NilValue;
END_RCPP
}
// innerProduct
double innerProduct(NumericVector x, NumericVector y);
RcppExport SEXP _SAIGE_innerProduct(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(innerProduct(x, y));
    return rcpp_result_gen;
END_RCPP
}
// refineKin
Rcpp::List refineKin(float relatednessCutoff, arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_refineKin(SEXP relatednessCutoffSEXP, SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type relatednessCutoff(relatednessCutoffSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(refineKin(relatednessCutoff, wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// shortenList
Rcpp::List shortenList(arma::imat& iMat, arma::fvec& kinValueVecTemp, float relatednessCutoff, arma::fvec& wVec, arma::fvec& tauVec);
RcppExport SEXP _SAIGE_shortenList(SEXP iMatSEXP, SEXP kinValueVecTempSEXP, SEXP relatednessCutoffSEXP, SEXP wVecSEXP, SEXP tauVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::imat& >::type iMat(iMatSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type kinValueVecTemp(kinValueVecTempSEXP);
    Rcpp::traits::input_parameter< float >::type relatednessCutoff(relatednessCutoffSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type wVec(wVecSEXP);
    Rcpp::traits::input_parameter< arma::fvec& >::type tauVec(tauVecSEXP);
    rcpp_result_gen = Rcpp::wrap(shortenList(iMat, kinValueVecTemp, relatednessCutoff, wVec, tauVec));
    return rcpp_result_gen;
END_RCPP
}
// testTime
arma::fvec testTime(int i, arma::fcolvec& m_bVec);
RcppExport SEXP _SAIGE_testTime(SEXP iSEXP, SEXP m_bVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< arma::fcolvec& >::type m_bVec(m_bVecSEXP);
    rcpp_result_gen = Rcpp::wrap(testTime(i, m_bVec));
    return rcpp_result_gen;
END_RCPP
}
// setgenoTest_bgenDosage
int setgenoTest_bgenDosage(std::string& filename, std::string& index_filename, Rcpp::DataFrame& ranges_to_include, Rcpp::DataFrame& ranges_to_exclude, std::vector< std::string > const& ids_to_include, std::vector< std::string > const& ids_to_exclude);
RcppExport SEXP _SAIGE_setgenoTest_bgenDosage(SEXP filenameSEXP, SEXP index_filenameSEXP, SEXP ranges_to_includeSEXP, SEXP ranges_to_excludeSEXP, SEXP ids_to_includeSEXP, SEXP ids_to_excludeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string& >::type index_filename(index_filenameSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type ranges_to_include(ranges_to_includeSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type ranges_to_exclude(ranges_to_excludeSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > const& >::type ids_to_include(ids_to_includeSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > const& >::type ids_to_exclude(ids_to_excludeSEXP);
    rcpp_result_gen = Rcpp::wrap(setgenoTest_bgenDosage(filename, index_filename, ranges_to_include, ranges_to_exclude, ids_to_include, ids_to_exclude));
    return rcpp_result_gen;
END_RCPP
}
// getDosage_inner_bgen_withquery
Rcpp::List getDosage_inner_bgen_withquery();
RcppExport SEXP _SAIGE_getDosage_inner_bgen_withquery() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDosage_inner_bgen_withquery());
    return rcpp_result_gen;
END_RCPP
}
// getDosage_inner_bgen_withquery_new
Rcpp::List getDosage_inner_bgen_withquery_new();
RcppExport SEXP _SAIGE_getDosage_inner_bgen_withquery_new() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDosage_inner_bgen_withquery_new());
    return rcpp_result_gen;
END_RCPP
}
// getDosage_bgen_withquery
Rcpp::List getDosage_bgen_withquery();
RcppExport SEXP _SAIGE_getDosage_bgen_withquery() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDosage_bgen_withquery());
    return rcpp_result_gen;
END_RCPP
}
// getDosage_bgen_noquery
Rcpp::List getDosage_bgen_noquery();
RcppExport SEXP _SAIGE_getDosage_bgen_noquery() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getDosage_bgen_noquery());
    return rcpp_result_gen;
END_RCPP
}
// getQueryStatus
bool getQueryStatus();
RcppExport SEXP _SAIGE_getQueryStatus() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getQueryStatus());
    return rcpp_result_gen;
END_RCPP
}
// getisReadVariantBgen
bool getisReadVariantBgen();
RcppExport SEXP _SAIGE_getisReadVariantBgen() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getisReadVariantBgen());
    return rcpp_result_gen;
END_RCPP
}
// getMarkerInfo
double getMarkerInfo();
RcppExport SEXP _SAIGE_getMarkerInfo() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getMarkerInfo());
    return rcpp_result_gen;
END_RCPP
}
// SetSampleIdx
int SetSampleIdx(Rcpp::IntegerVector sample_idx, int Ntest);
RcppExport SEXP _SAIGE_SetSampleIdx(SEXP sample_idxSEXP, SEXP NtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sample_idx(sample_idxSEXP);
    Rcpp::traits::input_parameter< int >::type Ntest(NtestSEXP);
    rcpp_result_gen = Rcpp::wrap(SetSampleIdx(sample_idx, Ntest));
    return rcpp_result_gen;
END_RCPP
}
// closetestGenoFile_bgenDosage
void closetestGenoFile_bgenDosage();
RcppExport SEXP _SAIGE_closetestGenoFile_bgenDosage() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closetestGenoFile_bgenDosage();
    return R_NilValue;
END_RCPP
}
// setgenoTest_plainDosage
int setgenoTest_plainDosage(std::string testGenoFile, int testGenofileNrowSkip, int testGenofileNcolSkip);
RcppExport SEXP _SAIGE_setgenoTest_plainDosage(SEXP testGenoFileSEXP, SEXP testGenofileNrowSkipSEXP, SEXP testGenofileNcolSkipSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type testGenoFile(testGenoFileSEXP);
    Rcpp::traits::input_parameter< int >::type testGenofileNrowSkip(testGenofileNrowSkipSEXP);
    Rcpp::traits::input_parameter< int >::type testGenofileNcolSkip(testGenofileNcolSkipSEXP);
    rcpp_result_gen = Rcpp::wrap(setgenoTest_plainDosage(testGenoFile, testGenofileNrowSkip, testGenofileNcolSkip));
    return rcpp_result_gen;
END_RCPP
}
// closetestGenoFile_plainDosage
void closetestGenoFile_plainDosage();
RcppExport SEXP _SAIGE_closetestGenoFile_plainDosage() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closetestGenoFile_plainDosage();
    return R_NilValue;
END_RCPP
}
// getGenoOfnthVar_plainDosage
arma::fvec getGenoOfnthVar_plainDosage(int mth, int testGenofileNrowSkip, int testGenofileNcolSkip);
RcppExport SEXP _SAIGE_getGenoOfnthVar_plainDosage(SEXP mthSEXP, SEXP testGenofileNrowSkipSEXP, SEXP testGenofileNcolSkipSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mth(mthSEXP);
    Rcpp::traits::input_parameter< int >::type testGenofileNrowSkip(testGenofileNrowSkipSEXP);
    Rcpp::traits::input_parameter< int >::type testGenofileNcolSkip(testGenofileNcolSkipSEXP);
    rcpp_result_gen = Rcpp::wrap(getGenoOfnthVar_plainDosage(mth, testGenofileNrowSkip, testGenofileNcolSkip));
    return rcpp_result_gen;
END_RCPP
}
// getrowHeaderVec_plainDosage
std::vector<std::string> getrowHeaderVec_plainDosage();
RcppExport SEXP _SAIGE_getrowHeaderVec_plainDosage() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getrowHeaderVec_plainDosage());
    return rcpp_result_gen;
END_RCPP
}
// SetSampleIdx_plainDosage
int SetSampleIdx_plainDosage(Rcpp::IntegerVector sample_idx, int Ntest);
RcppExport SEXP _SAIGE_SetSampleIdx_plainDosage(SEXP sample_idxSEXP, SEXP NtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sample_idx(sample_idxSEXP);
    Rcpp::traits::input_parameter< int >::type Ntest(NtestSEXP);
    rcpp_result_gen = Rcpp::wrap(SetSampleIdx_plainDosage(sample_idx, Ntest));
    return rcpp_result_gen;
END_RCPP
}
// SetSampleIdx_vcfDosage
void SetSampleIdx_vcfDosage(Rcpp::IntegerVector sample_idx, int Ntest);
RcppExport SEXP _SAIGE_SetSampleIdx_vcfDosage(SEXP sample_idxSEXP, SEXP NtestSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type sample_idx(sample_idxSEXP);
    Rcpp::traits::input_parameter< int >::type Ntest(NtestSEXP);
    SetSampleIdx_vcfDosage(sample_idx, Ntest);
    return R_NilValue;
END_RCPP
}
// setTestField
void setTestField(std::string testFieldInput);
RcppExport SEXP _SAIGE_setTestField(SEXP testFieldInputSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type testFieldInput(testFieldInputSEXP);
    setTestField(testFieldInput);
    return R_NilValue;
END_RCPP
}
// setgenoTest_vcfDosage
bool setgenoTest_vcfDosage(const std::string& vcfFileName, const std::string& vcfFileIndex, const std::string& vcfField, const std::string& ids_to_exclude_vcf, const std::string& ids_to_include_vcf, const std::string& chromNam, int32_t start, int32_t end);
RcppExport SEXP _SAIGE_setgenoTest_vcfDosage(SEXP vcfFileNameSEXP, SEXP vcfFileIndexSEXP, SEXP vcfFieldSEXP, SEXP ids_to_exclude_vcfSEXP, SEXP ids_to_include_vcfSEXP, SEXP chromNamSEXP, SEXP startSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFileName(vcfFileNameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type vcfFileIndex(vcfFileIndexSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type vcfField(vcfFieldSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type ids_to_exclude_vcf(ids_to_exclude_vcfSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type ids_to_include_vcf(ids_to_include_vcfSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type chromNam(chromNamSEXP);
    Rcpp::traits::input_parameter< int32_t >::type start(startSEXP);
    Rcpp::traits::input_parameter< int32_t >::type end(endSEXP);
    rcpp_result_gen = Rcpp::wrap(setgenoTest_vcfDosage(vcfFileName, vcfFileIndex, vcfField, ids_to_exclude_vcf, ids_to_include_vcf, chromNam, start, end));
    return rcpp_result_gen;
END_RCPP
}
// getNumofSamples
int getNumofSamples();
RcppExport SEXP _SAIGE_getNumofSamples() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getNumofSamples());
    return rcpp_result_gen;
END_RCPP
}
// getSampleIDlist
std::vector< std::string > getSampleIDlist();
RcppExport SEXP _SAIGE_getSampleIDlist() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getSampleIDlist());
    return rcpp_result_gen;
END_RCPP
}
// getGenoOfnthVar_vcfDosage_pre
bool getGenoOfnthVar_vcfDosage_pre();
RcppExport SEXP _SAIGE_getGenoOfnthVar_vcfDosage_pre() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getGenoOfnthVar_vcfDosage_pre());
    return rcpp_result_gen;
END_RCPP
}
// getGenoOfnthVar_vcfDosage
Rcpp::List getGenoOfnthVar_vcfDosage(int mth);
RcppExport SEXP _SAIGE_getGenoOfnthVar_vcfDosage(SEXP mthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mth(mthSEXP);
    rcpp_result_gen = Rcpp::wrap(getGenoOfnthVar_vcfDosage(mth));
    return rcpp_result_gen;
END_RCPP
}
// closetestGenoFile_vcfDosage
void closetestGenoFile_vcfDosage();
RcppExport SEXP _SAIGE_closetestGenoFile_vcfDosage() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closetestGenoFile_vcfDosage();
    return R_NilValue;
END_RCPP
}
// SetSampleIdx_forGenetest_vcfDosage
void SetSampleIdx_forGenetest_vcfDosage(std::vector<int> sample_idx, int Ntest);
RcppExport SEXP _SAIGE_SetSampleIdx_forGenetest_vcfDosage(SEXP sample_idxSEXP, SEXP NtestSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type sample_idx(sample_idxSEXP);
    Rcpp::traits::input_parameter< int >::type Ntest(NtestSEXP);
    SetSampleIdx_forGenetest_vcfDosage(sample_idx, Ntest);
    return R_NilValue;
END_RCPP
}
// setMAFcutoffs
void setMAFcutoffs(float minVal, float maxVal);
RcppExport SEXP _SAIGE_setMAFcutoffs(SEXP minValSEXP, SEXP maxValSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type minVal(minValSEXP);
    Rcpp::traits::input_parameter< float >::type maxVal(maxValSEXP);
    setMAFcutoffs(minVal, maxVal);
    return R_NilValue;
END_RCPP
}
// setvcfDosageMatrix
bool setvcfDosageMatrix(const std::string& vcfFileName, const std::string& vcfFileIndex, const std::string& vcfField);
RcppExport SEXP _SAIGE_setvcfDosageMatrix(SEXP vcfFileNameSEXP, SEXP vcfFileIndexSEXP, SEXP vcfFieldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type vcfFileName(vcfFileNameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type vcfFileIndex(vcfFileIndexSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type vcfField(vcfFieldSEXP);
    rcpp_result_gen = Rcpp::wrap(setvcfDosageMatrix(vcfFileName, vcfFileIndex, vcfField));
    return rcpp_result_gen;
END_RCPP
}
// getGenoOfGene_vcf
Rcpp::List getGenoOfGene_vcf(std::string marker_group_line, float minInfo);
RcppExport SEXP _SAIGE_getGenoOfGene_vcf(SEXP marker_group_lineSEXP, SEXP minInfoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type marker_group_line(marker_group_lineSEXP);
    Rcpp::traits::input_parameter< float >::type minInfo(minInfoSEXP);
    rcpp_result_gen = Rcpp::wrap(getGenoOfGene_vcf(marker_group_line, minInfo));
    return rcpp_result_gen;
END_RCPP
}
// closevcfDosageFile
void closevcfDosageFile();
RcppExport SEXP _SAIGE_closevcfDosageFile() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    closevcfDosageFile();
    return R_NilValue;
END_RCPP
}
// sparse_row_idx_mult_v2
int sparse_row_idx_mult_v2(arma::sp_fmat& spA);
RcppExport SEXP _SAIGE_sparse_row_idx_mult_v2(SEXP spASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_fmat& >::type spA(spASEXP);
    rcpp_result_gen = Rcpp::wrap(sparse_row_idx_mult_v2(spA));
    return rcpp_result_gen;
END_RCPP
}
// sparse_row_idx_mult
arma::fmat sparse_row_idx_mult(arma::sp_fmat& spA, arma::sp_fmat& spB);
RcppExport SEXP _SAIGE_sparse_row_idx_mult(SEXP spASEXP, SEXP spBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_fmat& >::type spA(spASEXP);
    Rcpp::traits::input_parameter< arma::sp_fmat& >::type spB(spBSEXP);
    rcpp_result_gen = Rcpp::wrap(sparse_row_idx_mult(spA, spB));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SAIGE_eigenMapMatMult", (DL_FUNC) &_SAIGE_eigenMapMatMult, 2},
    {"_SAIGE_closeGenoFile_plink", (DL_FUNC) &_SAIGE_closeGenoFile_plink, 0},
    {"_SAIGE_gettotalMarker", (DL_FUNC) &_SAIGE_gettotalMarker, 0},
    {"_SAIGE_getAlleleFreqVec", (DL_FUNC) &_SAIGE_getAlleleFreqVec, 0},
    {"_SAIGE_getMACVec", (DL_FUNC) &_SAIGE_getMACVec, 0},
    {"_SAIGE_getSubMarkerIndex", (DL_FUNC) &_SAIGE_getSubMarkerIndex, 0},
    {"_SAIGE_getSubMarkerNum", (DL_FUNC) &_SAIGE_getSubMarkerNum, 0},
    {"_SAIGE_Get_MultiMarkersBySample_StdGeno_Mat", (DL_FUNC) &_SAIGE_Get_MultiMarkersBySample_StdGeno_Mat, 0},
    {"_SAIGE_Get_MultiMarkersBySample_StdGeno", (DL_FUNC) &_SAIGE_Get_MultiMarkersBySample_StdGeno, 2},
    {"_SAIGE_parallelCrossProd", (DL_FUNC) &_SAIGE_parallelCrossProd, 1},
    {"_SAIGE_innerProductFun", (DL_FUNC) &_SAIGE_innerProductFun, 2},
    {"_SAIGE_parallelCrossProd_LOCO", (DL_FUNC) &_SAIGE_parallelCrossProd_LOCO, 1},
    {"_SAIGE_getCrossprodMatAndKin", (DL_FUNC) &_SAIGE_getCrossprodMatAndKin, 1},
    {"_SAIGE_getCrossprodMatAndKin_LOCO", (DL_FUNC) &_SAIGE_getCrossprodMatAndKin_LOCO, 1},
    {"_SAIGE_printComb", (DL_FUNC) &_SAIGE_printComb, 1},
    {"_SAIGE_findIndiceRelatedSample", (DL_FUNC) &_SAIGE_findIndiceRelatedSample, 0},
    {"_SAIGE_parallelcalsparseGRM", (DL_FUNC) &_SAIGE_parallelcalsparseGRM, 1},
    {"_SAIGE_parallelsumTwoVec", (DL_FUNC) &_SAIGE_parallelsumTwoVec, 1},
    {"_SAIGE_setgeno", (DL_FUNC) &_SAIGE_setgeno, 3},
    {"_SAIGE_Get_OneSNP_Geno", (DL_FUNC) &_SAIGE_Get_OneSNP_Geno, 1},
    {"_SAIGE_Get_OneSNP_Geno_forVarianceRatio", (DL_FUNC) &_SAIGE_Get_OneSNP_Geno_forVarianceRatio, 1},
    {"_SAIGE_Get_OneSNP_StdGeno", (DL_FUNC) &_SAIGE_Get_OneSNP_StdGeno, 1},
    {"_SAIGE_getDiagOfSigma", (DL_FUNC) &_SAIGE_getDiagOfSigma, 2},
    {"_SAIGE_getDiagOfSigma_LOCO", (DL_FUNC) &_SAIGE_getDiagOfSigma_LOCO, 2},
    {"_SAIGE_getCrossprod", (DL_FUNC) &_SAIGE_getCrossprod, 3},
    {"_SAIGE_getCrossprod_LOCO", (DL_FUNC) &_SAIGE_getCrossprod_LOCO, 3},
    {"_SAIGE_getPCG1ofSigmaAndVector", (DL_FUNC) &_SAIGE_getPCG1ofSigmaAndVector, 5},
    {"_SAIGE_getPCG1ofSigmaAndVector_LOCO", (DL_FUNC) &_SAIGE_getPCG1ofSigmaAndVector_LOCO, 5},
    {"_SAIGE_set_seed", (DL_FUNC) &_SAIGE_set_seed, 1},
    {"_SAIGE_nb", (DL_FUNC) &_SAIGE_nb, 1},
    {"_SAIGE_setStartEndIndex", (DL_FUNC) &_SAIGE_setStartEndIndex, 2},
    {"_SAIGE_calCV", (DL_FUNC) &_SAIGE_calCV, 1},
    {"_SAIGE_GetTrace", (DL_FUNC) &_SAIGE_GetTrace, 9},
    {"_SAIGE_getCoefficients", (DL_FUNC) &_SAIGE_getCoefficients, 6},
    {"_SAIGE_getCoefficients_LOCO", (DL_FUNC) &_SAIGE_getCoefficients_LOCO, 6},
    {"_SAIGE_getCoefficients_q_LOCO", (DL_FUNC) &_SAIGE_getCoefficients_q_LOCO, 6},
    {"_SAIGE_getAIScore", (DL_FUNC) &_SAIGE_getAIScore, 11},
    {"_SAIGE_fitglmmaiRPCG", (DL_FUNC) &_SAIGE_fitglmmaiRPCG, 12},
    {"_SAIGE_getSigma_X", (DL_FUNC) &_SAIGE_getSigma_X, 5},
    {"_SAIGE_getSigma_X_LOCO", (DL_FUNC) &_SAIGE_getSigma_X_LOCO, 5},
    {"_SAIGE_getSigma_G", (DL_FUNC) &_SAIGE_getSigma_G, 5},
    {"_SAIGE_getSigma_G_LOCO", (DL_FUNC) &_SAIGE_getSigma_G_LOCO, 5},
    {"_SAIGE_GetTrace_q", (DL_FUNC) &_SAIGE_GetTrace_q, 9},
    {"_SAIGE_getAIScore_q", (DL_FUNC) &_SAIGE_getAIScore_q, 8},
    {"_SAIGE_getAIScore_q_LOCO", (DL_FUNC) &_SAIGE_getAIScore_q_LOCO, 8},
    {"_SAIGE_fitglmmaiRPCG_q_LOCO", (DL_FUNC) &_SAIGE_fitglmmaiRPCG_q_LOCO, 9},
    {"_SAIGE_fitglmmaiRPCG_q", (DL_FUNC) &_SAIGE_fitglmmaiRPCG_q, 9},
    {"_SAIGE_parallelCrossProd_usingSubMarker", (DL_FUNC) &_SAIGE_parallelCrossProd_usingSubMarker, 1},
    {"_SAIGE_getCrossprodMatAndKin_usingSubMarker", (DL_FUNC) &_SAIGE_getCrossprodMatAndKin_usingSubMarker, 1},
    {"_SAIGE_parallelInnerProduct", (DL_FUNC) &_SAIGE_parallelInnerProduct, 2},
    {"_SAIGE_calGRMValueforSamplePair", (DL_FUNC) &_SAIGE_calGRMValueforSamplePair, 1},
    {"_SAIGE_createSparseKin", (DL_FUNC) &_SAIGE_createSparseKin, 4},
    {"_SAIGE_getColfromStdGenoMultiMarkersMat", (DL_FUNC) &_SAIGE_getColfromStdGenoMultiMarkersMat, 1},
    {"_SAIGE_getNColStdGenoMultiMarkersMat", (DL_FUNC) &_SAIGE_getNColStdGenoMultiMarkersMat, 0},
    {"_SAIGE_getNRowStdGenoMultiMarkersMat", (DL_FUNC) &_SAIGE_getNRowStdGenoMultiMarkersMat, 0},
    {"_SAIGE_setSubMarkerIndex", (DL_FUNC) &_SAIGE_setSubMarkerIndex, 1},
    {"_SAIGE_setRelatednessCutoff", (DL_FUNC) &_SAIGE_setRelatednessCutoff, 1},
    {"_SAIGE_innerProduct", (DL_FUNC) &_SAIGE_innerProduct, 2},
    {"_SAIGE_refineKin", (DL_FUNC) &_SAIGE_refineKin, 3},
    {"_SAIGE_shortenList", (DL_FUNC) &_SAIGE_shortenList, 5},
    {"_SAIGE_testTime", (DL_FUNC) &_SAIGE_testTime, 2},
    {"_SAIGE_setgenoTest_bgenDosage", (DL_FUNC) &_SAIGE_setgenoTest_bgenDosage, 6},
    {"_SAIGE_getDosage_inner_bgen_withquery", (DL_FUNC) &_SAIGE_getDosage_inner_bgen_withquery, 0},
    {"_SAIGE_getDosage_inner_bgen_withquery_new", (DL_FUNC) &_SAIGE_getDosage_inner_bgen_withquery_new, 0},
    {"_SAIGE_getDosage_bgen_withquery", (DL_FUNC) &_SAIGE_getDosage_bgen_withquery, 0},
    {"_SAIGE_getDosage_bgen_noquery", (DL_FUNC) &_SAIGE_getDosage_bgen_noquery, 0},
    {"_SAIGE_getQueryStatus", (DL_FUNC) &_SAIGE_getQueryStatus, 0},
    {"_SAIGE_getisReadVariantBgen", (DL_FUNC) &_SAIGE_getisReadVariantBgen, 0},
    {"_SAIGE_getMarkerInfo", (DL_FUNC) &_SAIGE_getMarkerInfo, 0},
    {"_SAIGE_SetSampleIdx", (DL_FUNC) &_SAIGE_SetSampleIdx, 2},
    {"_SAIGE_closetestGenoFile_bgenDosage", (DL_FUNC) &_SAIGE_closetestGenoFile_bgenDosage, 0},
    {"_SAIGE_setgenoTest_plainDosage", (DL_FUNC) &_SAIGE_setgenoTest_plainDosage, 3},
    {"_SAIGE_closetestGenoFile_plainDosage", (DL_FUNC) &_SAIGE_closetestGenoFile_plainDosage, 0},
    {"_SAIGE_getGenoOfnthVar_plainDosage", (DL_FUNC) &_SAIGE_getGenoOfnthVar_plainDosage, 3},
    {"_SAIGE_getrowHeaderVec_plainDosage", (DL_FUNC) &_SAIGE_getrowHeaderVec_plainDosage, 0},
    {"_SAIGE_SetSampleIdx_plainDosage", (DL_FUNC) &_SAIGE_SetSampleIdx_plainDosage, 2},
    {"_SAIGE_SetSampleIdx_vcfDosage", (DL_FUNC) &_SAIGE_SetSampleIdx_vcfDosage, 2},
    {"_SAIGE_setTestField", (DL_FUNC) &_SAIGE_setTestField, 1},
    {"_SAIGE_setgenoTest_vcfDosage", (DL_FUNC) &_SAIGE_setgenoTest_vcfDosage, 8},
    {"_SAIGE_getNumofSamples", (DL_FUNC) &_SAIGE_getNumofSamples, 0},
    {"_SAIGE_getSampleIDlist", (DL_FUNC) &_SAIGE_getSampleIDlist, 0},
    {"_SAIGE_getGenoOfnthVar_vcfDosage_pre", (DL_FUNC) &_SAIGE_getGenoOfnthVar_vcfDosage_pre, 0},
    {"_SAIGE_getGenoOfnthVar_vcfDosage", (DL_FUNC) &_SAIGE_getGenoOfnthVar_vcfDosage, 1},
    {"_SAIGE_closetestGenoFile_vcfDosage", (DL_FUNC) &_SAIGE_closetestGenoFile_vcfDosage, 0},
    {"_SAIGE_SetSampleIdx_forGenetest_vcfDosage", (DL_FUNC) &_SAIGE_SetSampleIdx_forGenetest_vcfDosage, 2},
    {"_SAIGE_setMAFcutoffs", (DL_FUNC) &_SAIGE_setMAFcutoffs, 2},
    {"_SAIGE_setvcfDosageMatrix", (DL_FUNC) &_SAIGE_setvcfDosageMatrix, 3},
    {"_SAIGE_getGenoOfGene_vcf", (DL_FUNC) &_SAIGE_getGenoOfGene_vcf, 2},
    {"_SAIGE_closevcfDosageFile", (DL_FUNC) &_SAIGE_closevcfDosageFile, 0},
    {"_SAIGE_sparse_row_idx_mult_v2", (DL_FUNC) &_SAIGE_sparse_row_idx_mult_v2, 1},
    {"_SAIGE_sparse_row_idx_mult", (DL_FUNC) &_SAIGE_sparse_row_idx_mult, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SAIGE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
